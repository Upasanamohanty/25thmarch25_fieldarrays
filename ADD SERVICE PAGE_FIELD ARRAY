"use client";

import { useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";
import { Plus, Minus } from "lucide-react";

interface ServiceField {
  serviceName: string;
  subCategory: string;
  subServiceName?: string;
}

const serviceOptions = ["Property Maintenance", "Cleaning Services", "Pest control & Disinfection Services", "Home Laundry Service"];
const subCategoryOptions = ["yes", "no"];

const GeneralInfoForm = () => {
  const { register, control, handleSubmit } = useForm({
    defaultValues: {
      services: [{ serviceName: "", subCategory: "", subServiceName: "" }],
    },
  });

  const { fields, append, remove } = useFieldArray({
    control,
    name: "services",
  });

  const [selectedFile, setSelectedFile] = useState<File | null>(null);

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (event.target.files && event.target.files[0]) {
      setSelectedFile(event.target.files[0]);
    }
  };

  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {
    event.preventDefault();
  };

  const handleDrop = (event: React.DragEvent<HTMLDivElement>) => {
    event.preventDefault();
    if (event.dataTransfer.files && event.dataTransfer.files[0]) {
      setSelectedFile(event.dataTransfer.files[0]);
    }
  };

  return (
    <div className="w-[70.5rem] rounded-[0.75rem] p-[1.5rem] bg-white shadow-lg flex flex-col gap-[0.875rem]">
      <h2 className="text-lg font-semibold">General Information</h2>
      
      <div
        className="border-dashed border-2 border-gray-300 rounded-lg p-5 flex items-center justify-between cursor-pointer"
        onDragOver={handleDragOver}
        onDrop={handleDrop}
        onClick={() => document.getElementById("fileInput")?.click()}
      >
        <input
          type="file"
          id="fileInput"
          className="hidden"
          accept="image/svg+xml"
          onChange={handleFileChange}
        />
        <div className="flex items-center gap-2">
          <span className="text-gray-500">ðŸ“·</span>
          <span className="text-gray-400">
            {selectedFile ? selectedFile.name : "Drag and drop image here, or click add image(svg)"}
          </span>
        </div>
        <button
          className="bg-purple-200 text-purple-700 px-4 py-2 rounded-lg"
          onClick={() => document.getElementById("fileInput")?.click()}
        >
          Upload
        </button>
      </div>
      
      {fields.map((field, index) => (
        <div key={field.id} className="flex flex-col gap-4">
          <div className="flex justify-between gap-4 items-center">
            <div className="w-[45%]">
              <label className="block text-gray-700">Service Name</label>
              <select
                className="w-full p-2 border border-gray-300 rounded-lg"
                {...register(`services.${index}.serviceName`)}
              >
                <option value="">Select Service</option>
                {serviceOptions.map((option) => (
                  <option key={option} value={option}>{option}</option>
                ))}
              </select>
            </div>
            <div className="w-[45%]">
              <label className="block text-gray-700">Sub Category</label>
              <select
                className="w-full p-2 border border-gray-300 rounded-lg"
                {...register(`services.${index}.subCategory`)}
              >
                <option value="">Select Sub Category</option>
                {subCategoryOptions.map((option) => (
                  <option key={option} value={option}>{option}</option>
                ))}
              </select>
            </div>
          </div>
          <div className="w-full rounded-lg p-5 bg-white shadow-lg flex flex-col gap-4">
            <div className="flex justify-between items-center">
              <h3 className="text-md font-semibold">Sub Service</h3>
              <div className="flex gap-2">
                <button className="bg-purple-200 p-2 rounded-lg" onClick={() => remove(index)}>
                  <Minus className="w-4 h-4 text-purple-700" />
                </button>
                <button className="bg-purple-200 p-2 rounded-lg" onClick={() => append({ serviceName: "", subCategory: "", subServiceName: "" })}>
                  <Plus className="w-4 h-4 text-purple-700" />
                </button>
              </div>
            </div>
            <div
              className="border-dashed border-2 border-gray-300 rounded-lg p-5 flex items-center justify-between cursor-pointer"
              onDragOver={handleDragOver}
              onDrop={handleDrop}
              onClick={() => document.getElementById("subFileInput")?.click()}
            >
              <input
                type="file"
                id="subFileInput"
                className="hidden"
                accept="image/png, image/jpeg"
                onChange={handleFileChange}
              />
              <div className="flex items-center gap-2">
                <span className="text-gray-500">ðŸ“·</span>
                <span className="text-gray-400">
                  {selectedFile ? selectedFile.name : "Drag and drop image here, or click add image(jpg,png)"}
                </span>
              </div>
              <button
                className="bg-purple-200 text-purple-700 px-4 py-2 rounded-lg"
                onClick={() => document.getElementById("subFileInput")?.click()}
              >
                Upload
              </button>
            </div>
            <div className="w-full">
              <label className="block text-gray-700">Service</label>
              <input
                className="w-full p-2 border border-gray-300 rounded-lg"
                {...register(`services.${index}.subServiceName`)}
                placeholder="Service Name"
              />
            </div>
 <div className="w-[70.5rem] h-auto bg-white rounded-[0.75rem] p-[1.2rem_1.5rem] shadow-md flex flex-col space-y-4">
      <div className="flex justify-between items-center">
        <h2 className="text-lg font-semibold">Add Package</h2>
        <div className="flex space-x-2">
          <button className="bg-purple-200 p-2 rounded-lg" onClick={() => append({ service: "", cost: "", description: "", image: null })}>
            <Plus className="w-4 h-4 text-purple-700" />
          </button>
          {fields.length > 1 && (
            <button className="bg-red-200 p-2 rounded-lg" onClick={() => remove(fields.length - 1)}>
              <Minus className="w-4 h-4 text-red-700" />
            </button>
          )}
        </div>
      </div>
      {fields.map((item, index) => (
        <div key={item.id} className="border border-gray-300 rounded-lg p-4 flex flex-col space-y-4">
          <div
            className="border border-gray-300 rounded-lg p-4 flex items-center justify-between cursor-pointer"
            onDragOver={(e) => e.preventDefault()}
            onDrop={(e) => {
              e.preventDefault();
              const file = e.dataTransfer.files[0];
              if (file) setValue(`packages.${index}.image`, file);
            }}
          >
            <label className="flex items-center space-x-4 cursor-pointer" onClick={() => fileInputRef.current.click()}>
              <div className="bg-gray-200 p-4 rounded-md">ðŸ“·</div>
              <p className="text-gray-500">Drag and drop image here, or click to add image (jpg, png)</p>
            </label>
            <input 
              ref={fileInputRef}
              type="file" 
              accept="image/*" 
              className="hidden" 
              onChange={(e) => handleImageUpload(index, e)}
            />
            <button 
              className="bg-purple-300 text-white p-2 rounded-lg"
              onClick={() => fileInputRef.current.click()}
            >
              Upload
            </button>
          </div>
          <div className="grid grid-cols-2 gap-4">
            <div>
              <label className="block text-gray-600">Service</label>
              <input {...register(`packages.${index}.service`)} type="text" placeholder="Service Name" className="w-full border p-2 rounded-md" />
            </div>
            <div>
              <label className="block text-gray-600">Cost</label>
              <input {...register(`packages.${index}.cost`)} type="text" placeholder="$0" className="w-full border p-2 rounded-md" />
            </div>
          </div>
          <div>
            <label className="block text-gray-600">Service Description</label>
            <textarea {...register(`packages.${index}.description`)} placeholder="Details" className="w-full border p-2 rounded-md h-[6vw]" />
          </div>
        </div>
          </div>
        </div>
      ))}
    </div>
  );
};

export default GeneralInfoForm;
